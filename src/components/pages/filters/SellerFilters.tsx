"use client";
/* eslint-disable @typescript-eslint/no-explicit-any */

import { SellerSearchParams } from "@/@types/RequestHelpers/SellerSearchParams";
import { FC } from "react";
import { InputField } from "../inputField/InputField";
import { SelectField } from "../selectField/SelectField";
import SearchInput from "../searchInput/SearchInput";

interface SellerFiltersProps {
  filters: SellerSearchParams;
  setFilters: React.Dispatch<React.SetStateAction<SellerSearchParams>>;
  search: string;
  setSearch: (value: string) => void;
}

const statusOptions = [
  { value: "true", label: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß" },
  { value: "false", label: "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô" },
];

const sortOptions = [
  { value: "id", label: "‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î" },                          // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏° Id ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
  { value: "userid", label: "‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏ô‡πâ‡∏≠‡∏¢ ‚Üí ‡∏°‡∏≤‡∏Å" },       // OrderBy(s => s.UserId)
  { value: "userid_desc", label: "‡∏£‡∏´‡∏±‡∏™‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏°‡∏≤‡∏Å ‚Üí ‡∏ô‡πâ‡∏≠‡∏¢" },  // OrderByDescending(s => s.UserId)
  { value: "identitynumber", label: "‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£ ‡∏ô‡πâ‡∏≠‡∏¢ ‚Üí ‡∏°‡∏≤‡∏Å" },  // OrderBy(s => s.IdentityNumber)
  { value: "identitynumber_desc", label: "‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£ ‡∏°‡∏≤‡∏Å ‚Üí ‡∏ô‡πâ‡∏≠‡∏¢" }, // OrderByDescending(s => s.IdentityNumber)
  { value: "isverified", label: "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô ‚Üí ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß" }, // false ‚Üí true
  { value: "isverified_desc", label: "‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‚Üí ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô" }, // true ‚Üí false
];

const SellerFilters: FC<SellerFiltersProps> = ({
  filters,
  setFilters,
  search,
  setSearch,
}) => {
  const handleChange = (field: keyof SellerSearchParams, value: any) => {
    setFilters((prev) => ({ ...prev, [field]: value, pageNumber: 1 }));
  };

  const handleReset = () => {
    setFilters({
      pageNumber: 1,
      pageSize: 10,
      isVerified: false,
    });
    setSearch("");
  };

  return (
    <div className="bg-white shadow-md rounded-lg p-6 w-full">
      <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4 gap-4">
        <h2 className="text-lg font-semibold text-gray-700">üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢</h2>
        <div className="flex flex-col sm:flex-row justify-end gap-3">
          <button
            onClick={handleReset}
            className="px-4 py-2 bg-gray-200 hover:bg-gray-300 text-gray-800 rounded-lg shadow-sm"
          >
            ‚ôªÔ∏è ‡∏£‡∏µ‡πÄ‡∏ã‡∏ï
          </button>
          <button
            onClick={() => setFilters({ ...filters, pageNumber: 1 })}
            className="px-4 py-2 bg-primary hover:bg-blue-700 text-white font-medium rounded-lg shadow-sm"
          >
            üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
          </button>
        </div>
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
        {/* ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ/‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏° */}
        <SearchInput value={search} onChange={setSearch} placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏°" />

        {/* ‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô */}
        <InputField
          label="‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô"
          placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô"
          value={filters.identityNumber ?? ""}
          onChange={(v: any) => handleChange("identityNumber", v)}
        />

        {/* ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà */}
        <InputField
          label="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà"
          placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà"
          value={filters.address ?? ""}
          onChange={(v: any) => handleChange("address", v)}
        />

        {/* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô */}
        <SelectField
          label="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô"
          value={filters.isVerified?.toString()}
          onChange={(v) => handleChange("isVerified", v === "" ? undefined : v === "true")}
          options={statusOptions}
          placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞"
        />

        {/* ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏° */}
        <SelectField
          label="‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°"
          value={filters.sortBy ?? ""}
          onChange={(v: any) => handleChange("sortBy", v)}
          options={sortOptions}
          placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏á"
        />
      </div>
    </div>
  );
};

export default SellerFilters;
